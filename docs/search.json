[{"path":"/articles/my-vignette.html","id":"what-is-simpute","dir":"Articles","previous_headings":"","what":"What is Simpute?","title":"Guide to using Simpute","text":"Simpute designed simple imputation package. data rows blank “N/”, can use simple package fill gaps make data frame whole clean. made easy understand directed towards users just learning use R. ’s , please read learn can use . get started, please load package using code .","code":"library(simpute)"},{"path":"/articles/my-vignette.html","id":"imputation-functions","dir":"Articles","previous_headings":"","what":"Imputation Functions","title":"Guide to using Simpute","text":"several different types imputation functions can use, depending kind data like impute. follows: 1.Num_imputer - function used column contains integer values decimal numbers. impute empty (“N/”) data rows average value column. 2.Cat_imputer - function used columns categorical values. impute blank values frequent category found column. 3.Bol_imputer - function use boolean (“TRUE” “FALSE”) column dataframe. impute blank values frequent TRUE FALSE values found column. method argument = ‘mode’. 4. Date_imputer - final function used imputation blank empty dates data frame.populate blank date cells median date. method argument = ‘median’.","code":""},{"path":"/articles/my-vignette.html","id":"function-arguments","dir":"Articles","previous_headings":"","what":"Function Arguments","title":"Guide to using Simpute","text":"functions use arguments order maintain simplicity. three components function(), data, \"column\", method (found bol_imputer date_imputer functions). data entered must dataframe tibble. column name supplied string format found within data provided, otherwise error appear. Lastly, bol_imputer date_imputer functions also method argument, defaulted ‘mode’ bol_imptuer ‘median’ date_imputer, hope add flexibility method functions future.","code":""},{"path":"/articles/my-vignette.html","id":"examples-on-how-to-use-it","dir":"Articles","previous_headings":"","what":"Examples on How to use it","title":"Guide to using Simpute","text":"try function encourage follow along exercise set . First, create test data frame use. First, apply categorical imputer first column. Next apply numeric imputer running following printing output. Test boolean imputer running following printing output. Last, least test date imputer. Kindly note date imputer work, must first convert column date format, please ensure string.","code":"test_df <- data.frame(    'Origin' = c(\"Canada\", \"Japan\", \"Japan\", \"Japan\", \"Germany\", NA),    'Speed'= c(NA, 2, 2, 2, 1, 1),    'OnTheMarket' = c(FALSE, FALSE, NA, TRUE, FALSE, NA),    'Date' = lubridate::as_date(c(\"4/2/2013\", \"4/2/2014\", \"01/29/2023\", \"4/2/2016\", NA, \"01/29/2023\"), format = \"%m/%d/%Y\")   ) impu_cat <- cat_imputer(test_df, \"Origin\")  print(impu_cat) #>    Origin Speed OnTheMarket       Date #> 1  Canada    NA       FALSE 2013-04-02 #> 2   Japan     2       FALSE 2014-04-02 #> 3   Japan     2          NA 2023-01-29 #> 4   Japan     2        TRUE 2016-04-02 #> 5 Germany     1       FALSE       <NA> #> 6   Japan     1          NA 2023-01-29 impu_num <- num_imputer(test_df, \"Speed\")  print(impu_num) #>    Origin Speed OnTheMarket       Date #> 1  Canada     2       FALSE 2013-04-02 #> 2   Japan     2       FALSE 2014-04-02 #> 3   Japan     2          NA 2023-01-29 #> 4   Japan     2        TRUE 2016-04-02 #> 5 Germany     1       FALSE       <NA> #> 6    <NA>     1          NA 2023-01-29 impu_bol <- bol_imputer(test_df, 'OnTheMarket')  print(impu_bol) #>    Origin Speed OnTheMarket       Date #> 1  Canada    NA       FALSE 2013-04-02 #> 2   Japan     2       FALSE 2014-04-02 #> 3   Japan     2        TRUE 2023-01-29 #> 4   Japan     2        TRUE 2016-04-02 #> 5 Germany     1       FALSE       <NA> #> 6    <NA>     1        TRUE 2023-01-29 impu_dat <- date_imputer(test_df, \"Date\") print(impu_dat) #>    Origin Speed OnTheMarket       Date #> 1  Canada    NA       FALSE 2013-04-02 #> 2   Japan     2       FALSE 2014-04-02 #> 3   Japan     2          NA 2023-01-29 #> 4   Japan     2        TRUE 2016-04-02 #> 5 Germany     1       FALSE 2023-01-29 #> 6    <NA>     1          NA 2023-01-29"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ken Wang. Author, maintainer. Fujie Sun. Author. Renee Kwon. Author. Lisa Sequeria. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang K, Sun F, Kwon R, Sequeria L (2023). simpute: data imputation tool. R package version 0.0.0.9000.","code":"@Manual{,   title = {simpute: A data imputation tool},   author = {Ken Wang and Fujie Sun and Renee Kwon and Lisa Sequeria},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team: Lisa Sequeira Renee Kwon Fujie Sun Ken Wang project team review investigate complaints, respond way deems appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant homepage, version 1.4.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to simpute","title":"Contributing to simpute","text":"outlines propose change simpute. detailed info contributing , tidyverse packages, please see development contributing guide. Contributions welcome, greatly appreciated! Every little bit helps, credit always given.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"report-bugs","dir":"","previous_headings":"Types of Contributions","what":"Report Bugs","title":"Contributing to simpute","text":"reporting bug, please include: operating system name version. details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"/CONTRIBUTING.html","id":"fix-bugs","dir":"","previous_headings":"Types of Contributions","what":"Fix Bugs","title":"Contributing to simpute","text":"Look GitHub issues bugs. Anything tagged “bug” “help wanted” open whoever wants implement .","code":""},{"path":"/CONTRIBUTING.html","id":"implement-features","dir":"","previous_headings":"Types of Contributions","what":"Implement Features","title":"Contributing to simpute","text":"Look GitHub issues features. Anything tagged “enhancement” “help wanted” open whoever wants implement .","code":""},{"path":"/CONTRIBUTING.html","id":"write-documentation","dir":"","previous_headings":"Types of Contributions","what":"Write Documentation","title":"Contributing to simpute","text":"can never enough documentation! Please feel free contribute part documentation, official docs, docstrings, even web blog posts, articles, .","code":""},{"path":"/CONTRIBUTING.html","id":"submit-feedback","dir":"","previous_headings":"Types of Contributions","what":"Submit Feedback","title":"Contributing to simpute","text":"proposing feature: Explain detail work. Keep scope narrow possible, make easier implement. Remember volunteer-driven project, contributions welcome :)","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Types of Contributions","what":"Code style","title":"Contributing to simpute","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to simpute","text":"Please note simpute project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/index.html","id":"what-does-it-do","dir":"","previous_headings":"","what":"What does it do?","title":"A data imputation tool","text":"ever time missing data holding back? Well package ! R package simple data imputation allow quickly seamlessly impute missing data (numeric, categorical, date/time boolean values) using large datasets. follow simple 4 steps: 1. Import package data wish impute 2. Select function method imputation (depend data type - read usage section details) 3. Hit run 4. Save newly imputed dataset package help simplify imputation needs data ready need !","code":""},{"path":"/index.html","id":"contributors--maintainers","dir":"","previous_headings":"","what":"Contributors & Maintainers","title":"A data imputation tool","text":"Lisa Sequeira Renee Kwon Fujie Sun Ken Wang","code":""},{"path":"/index.html","id":"usage-details","dir":"","previous_headings":"","what":"Usage Details","title":"A data imputation tool","text":"four main functions dealing data type: Num_imputer: function fills empty values numeric column mean value. Cat_imputer: function fills empty values categorical column values derived based frequent (mode) category. Bol_imputer: function fills empty values boolean column values derived using frequent (mode) boolean value. Date_imputer: function fills empty values date column median point range dates column. information examples, please go .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A data imputation tool","text":"devtools package, can install via CRAN : can install Simpute GitHub follows using R consle: Lastly, load package:","code":"install.packages(\"devtools\") devtools::install_github(\"UBC-MDS/simpute-r\") library(simpute)"},{"path":"/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"A data imputation tool","text":"demonstration, use sample dataset test_df containing NAs:","code":"test_df <- data.frame( 'Origin' = c(\"Canada\", \"Japan\", \"Japan\", \"Japan\", \"Germany\", NA),  'Speed'= c(NA, 2, 2, 2, 1, 1), 'OnTheMarket' = c(FALSE, FALSE, NA, TRUE, FALSE, NA), 'Date' = lubridate::as_date(c(\"4/2/2013\", \"4/2/2014\", \"01/29/2023\", \"4/2/2016\", NA, \"01/29/2023\"), format = \"%m/%d/%Y\") )  #To run functions simply do the following impu_num <- num_imputer(test_df, \"Speed\") #For numerical columns print(impu_num)  impu_cat <- cat_imputer(test_df, \"Origin\") #For categorical columns print(impu_cat)  impu_bol <- bol_imputer(test_df, \"OntheMarket\") #For boolean columns print(impu_bol)  impu_dat <- date_imputer(test_df, \"Date\") #For date columns print(impu_dat)"},{"path":"/index.html","id":"within-the-r-ecosystem","dir":"","previous_headings":"","what":"Within the R Ecosystem","title":"A data imputation tool","text":"several useful packages R ecosystem imputing data. example, MICE powerful package allows multiple imputations values drawn distribution data. Hmisc package contains impute function using methods additive regression, bootstrapping, predictive mean matching. well, users may use base R dplyr package filter missing values replace manually. However, package aims simplify process make process easier quicker use general public.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"A data imputation tool","text":"Interested contributing? Check contributing guidelines. Please note project released Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"A data imputation tool","text":"simpute created Lisa Sequeira, Renee Kwon, Fujie Sun, Ken Wang. licensed terms MIT license.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 simpute authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/bol_imputer.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation function for a boolean column — bol_imputer","title":"Imputation function for a boolean column — bol_imputer","text":"Imputation function boolean column","code":""},{"path":"/reference/bol_imputer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation function for a boolean column — bol_imputer","text":"","code":"bol_imputer(x, c, method = \"mode\")"},{"path":"/reference/bol_imputer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation function for a boolean column — bol_imputer","text":"x input data tibble c name logical class boolean column modify method name imputing strategy.","code":""},{"path":"/reference/bol_imputer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation function for a boolean column — bol_imputer","text":"output data tibble imputation","code":""},{"path":"/reference/bol_imputer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputation function for a boolean column — bol_imputer","text":"","code":"input_df <- data.frame(a = c(TRUE,FALSE, TRUE), b = c(TRUE,FALSE, NA)) bol_imputer(input_df, \"b\", \"mode\") #>       a     b #> 1  TRUE  TRUE #> 2 FALSE FALSE #> 3  TRUE  TRUE"},{"path":"/reference/cat_imputer.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation function for a categorical column using the most frequent value — cat_imputer","title":"Imputation function for a categorical column using the most frequent value — cat_imputer","text":"Imputation function categorical column using frequent value","code":""},{"path":"/reference/cat_imputer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation function for a categorical column using the most frequent value — cat_imputer","text":"","code":"cat_imputer(x, col)"},{"path":"/reference/cat_imputer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation function for a categorical column using the most frequent value — cat_imputer","text":"x input data tibble col name column modify","code":""},{"path":"/reference/cat_imputer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation function for a categorical column using the most frequent value — cat_imputer","text":"output data tibble imputation","code":""},{"path":"/reference/cat_imputer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputation function for a categorical column using the most frequent value — cat_imputer","text":"","code":"input_df <- data.frame(a = c('BC', 'BC', 'ON', 'AB', NA)) cat_imputer(input_df, \"a\") #>    a #> 1 BC #> 2 BC #> 3 ON #> 4 AB #> 5 BC"},{"path":"/reference/date_imputer.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation function for a date column — date_imputer","title":"Imputation function for a date column — date_imputer","text":"Imputation function date column","code":""},{"path":"/reference/date_imputer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation function for a date column — date_imputer","text":"","code":"date_imputer(x, col, method = \"median\")"},{"path":"/reference/date_imputer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation function for a date column — date_imputer","text":"x input data tibble col name column modify method name imputing strategy.","code":""},{"path":"/reference/date_imputer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation function for a date column — date_imputer","text":"output data tibble imputation","code":""},{"path":"/reference/date_imputer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputation function for a date column — date_imputer","text":"","code":"input_df <- data.frame(a = (c(as.Date('1990/02/17'), as.Date('1991/02/17'), NA, as.Date('1992/02/17')))) date_imputer(input_df, \"a\", \"median\") #>            a #> 1 1990-02-17 #> 2 1991-02-17 #> 3 2023-01-29 #> 4 1992-02-17"},{"path":"/reference/num_imputer.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation function for a numerical column — num_imputer","title":"Imputation function for a numerical column — num_imputer","text":"Imputation function numerical column","code":""},{"path":"/reference/num_imputer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation function for a numerical column — num_imputer","text":"","code":"num_imputer(x, col)"},{"path":"/reference/num_imputer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation function for a numerical column — num_imputer","text":"x input data tibble col name column modify string charactor","code":""},{"path":"/reference/num_imputer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation function for a numerical column — num_imputer","text":"output data tibble imputation","code":""},{"path":"/reference/num_imputer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputation function for a numerical column — num_imputer","text":"","code":"input_df <- data.frame(a = c(1,2,3,4,5,6, NA)) num_imputer(input_df, \"a\") #>     a #> 1 1.0 #> 2 2.0 #> 3 3.0 #> 4 4.0 #> 5 5.0 #> 6 6.0 #> 7 3.5"}]
